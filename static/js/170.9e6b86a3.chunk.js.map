{"version":3,"file":"static/js/170.9e6b86a3.chunk.js","mappings":"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","sources":["API/API.js","components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx","hooks/useMovie.jsx"],"sourcesContent":["import axios from \"axios\";\n\nexport const MovieAPI = {\n    API_KEY: '8725014291262b48aab04b426e3a8196',\n    BASE_URL: `https://api.themoviedb.org/3/`,\n\n    getTrending: async () => {\n        const trendingForToday = await axios.get(`${MovieAPI.BASE_URL}/trending/all/day?api_key=${MovieAPI.API_KEY}`).catch(error => {\n            throw new Error(error.message);\n        });\n        return await trendingForToday.data.results;\n    },\n\n    getMovieByName: async movieName => {\n        const movieByName = await axios.get(`${MovieAPI.BASE_URL}search/movie?api_key=${MovieAPI.API_KEY}&query=${movieName}`).catch(error => {\n            throw new Error(error.message);\n        });\n        return movieByName.data.results;\n    },\n\n    getMovieDetails: async movieID => {\n        const movieDetails = await axios.get(`${MovieAPI.BASE_URL}movie/${movieID}?api_key=${MovieAPI.API_KEY}`).catch(error => {\n            throw new Error(error.message);\n        });\n        return movieDetails.data;\n    },\n\n    getMovieCredits: async movieID => {\n        const movieCredits = await axios.get(`${MovieAPI.BASE_URL}movie/${movieID}/credits?api_key=${MovieAPI.API_KEY}`).catch(error => {\n            throw new Error(error.message);\n        });\n        return movieCredits.data;\n    },\n\n    getMovieReviews: async movieID => {\n        const movieCredits = await axios.get(`${MovieAPI.BASE_URL}movie/${movieID}/reviews?api_key=${MovieAPI.API_KEY}`).catch(error => {\n            throw new Error(error.message);\n        });\n        return movieCredits.data.results;\n    },\n};\n\n","import styled from '@emotion/styled';\n\nexport const MovieDetailsSection = styled.section`\n  margin-top: 15px;\n  display: flex;\n  flex-wrap: wrap;\n  flex-grow: 1;\n  gap: 15px;\n`;\n\nexport const MovieDetailsInfo = styled.div`\n  max-width: 80%;\n`;\n\nexport const AdditionalInfo = styled.div`\n  width: 100%;\n`;\n\nexport const AdditionalList = styled.ul`\n  font-size: 24px;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  display: flex;\n  gap: 15px;\n`;\n\nexport const AdditionalListItem = styled.li`\n  margin-bottom: 10px;\n  padding: 0;\n\n  list-style: none;\n  a {\n    text-decoration: none;\n    color: #000000;\n    &:hover,\n    &:focus {\n      text-decoration: underline;\n      color: red;\n    }\n  }\n`;","import PropTypes from 'prop-types';\nimport { Suspense } from 'react';\nimport { Link, Outlet, useLocation } from 'react-router-dom';\nimport {\n  AdditionalInfo,\n  AdditionalList,\n  AdditionalListItem,\n  MovieDetailsInfo,\n  MovieDetailsSection,\n} from './MovieDetails.styled';\nimport { useMovie } from 'hooks/useMovie';\n\n\nconst MovieDetails = () => {\n  const [movieDetails] = useMovie('Details');\n  const location = useLocation();\n\n  const { poster_path, title, vote_average, genres, overview } = movieDetails;\n\n  return (\n    <>\n      <Link\n        to={location.state?.from ?? '/'}\n        style={{\n          textDecoration: 'none',\n          color: '#000000',\n          display: 'inline-block',\n          padding: '5px',\n        }}\n        onMouseEnter={e => {\n          e.target.style.color = 'red';\n        }}\n        onMouseLeave={e => {\n          e.target.style.color = '#000000';\n        }}\n        onFocus={e => {\n          e.target.style.color = 'red';\n        }}\n        onBlur={e => {\n          e.target.style.color = '#000000';\n        }}\n      >\n        {'<'} Go back\n      </Link>\n      {!movieDetails ? (\n        <div>There are no film details for this film</div>\n      ) : (\n        <MovieDetailsSection>\n          <img\n            src={\n              poster_path ? 'https://image.tmdb.org/t/p/w500' + poster_path : ''\n            }\n            alt={title}\n            width=\"200px\"\n          />\n          <MovieDetailsInfo>\n            <h2>{title}</h2>\n            <p>Vote average: {vote_average}</p>\n            <h3>Overview</h3>\n            <p>{overview}</p>\n            <h4>Genres</h4>\n            <ul>\n              {genres &&\n                genres.map(genre => <li key={genre.id}>{genre.name}</li>)}\n            </ul>\n          </MovieDetailsInfo>\n          <AdditionalInfo>\n            <h5>Additional information</h5>\n            <AdditionalList>\n              <AdditionalListItem>\n                <Link to=\"cast\">Cast</Link>\n              </AdditionalListItem>\n              <AdditionalListItem>\n                <Link to=\"reviews\">Reviews</Link>\n              </AdditionalListItem>\n            </AdditionalList>\n          </AdditionalInfo>\n          <Suspense fallback={<div>Please wait...</div>}>\n            <Outlet />\n          </Suspense>\n        </MovieDetailsSection>\n      )}\n    </>\n  );\n};\n\nMovieDetails.propTypes = {\n  movieDetails: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string,\n    vote_average: PropTypes.number,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n      })\n    ),\n    overview: PropTypes.string,\n  }),\n};\n\nexport default MovieDetails;","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { MovieAPI } from \"API/API\";\n\nexport const useMovie = type => {\n  const [state, setState] = useState(type === 'Details' ? {} : []);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    try {\n      if (type === 'Cast') {\n        (async () => {\n          setState(await MovieAPI.getMovieCredits(movieId));\n        })();\n        return;\n      }\n\n      if (type === 'Reviews') {\n        (async () => {\n          setState(await MovieAPI.getMovieReviews(movieId));\n        })();\n        return;\n      }\n\n      if (type === 'Details') {\n        (async () => {\n          setState(await MovieAPI.getMovieDetails(movieId));\n        })();\n        return;\n      }\n    } catch (error) {\n      console.log(error);\n      throw new Error(error.message);\n    }\n  }, [movieId, type]);\n\n  return [state];\n};"],"names":["MovieAPI","API_KEY","BASE_URL","getTrending","axios","catch","error","Error","message","trendingForToday","data","results","getMovieByName","movieName","movieByName","getMovieDetails","movieID","movieDetails","getMovieCredits","movieCredits","getMovieReviews","MovieDetailsSection","styled","MovieDetailsInfo","AdditionalInfo","AdditionalList","AdditionalListItem","useMovie","location","useLocation","poster_path","title","vote_average","genres","overview","to","state","from","style","textDecoration","color","display","padding","onMouseEnter","e","target","onMouseLeave","onFocus","onBlur","src","alt","width","map","genre","name","id","Suspense","fallback","type","useState","setState","movieId","useParams","useEffect","console","log"],"sourceRoot":""}